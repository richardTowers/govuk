import {readFile} from 'fs/promises'
import {parse} from 'yaml'
import {z} from 'zod'

const translations = z.object({
  en: z.object({
    common: z.object({ visit: z.string() }),
    components: z.object({
      figure: z.object({ image_credit: z.string() }),
      print_link: z.object({ text: z.string() }),
      published_dates: z.object({
        hide_all_updates: z.string(),
        last_updated: z.string(),
        published: z.string(),
        see_all_updates: z.string(),
        show_all_updates: z.string(),
      }),
      publisher_metadata: z.object({
        hide_all: z.string(),
        show_all: z.string(),
      }),
      share_links: z.object({ share_this_page: z.string() }),
    }),
    consultation: z.object({
      and: z.string(),
      another_website_html: z.string(),
      at: z.string(),
      closes: z.string(),
      closes_at: z.string(),
      complete_a: z.string(),
      description: z.string(),
      detail_of_feedback_received: z.string(),
      detail_of_outcome: z.string(),
      documents: z.string(),
      download_outcome: z.string(),
      either: z.string(),
      email_to: z.string(),
      feedback_received: z.string(),
      is_being: z.string(),
      not_open_yet: z.string(),
      on: z.string(),
      opens: z.string(),
      original_consultation: z.string(),
      ran_from: z.string(),
      respond_online: z.string(),
      visit_soon: z.string(),
      was: z.string(),
      ways_to_respond: z.string(),
      write_to: z.string(),
    }),
    contact: z.object({
      email: z.string(),
      find_call_charges: z.string(),
      online: z.string(),
      phone: z.string(),
      webchat: z.string(),
    }),
    content_item: z.object({
      coming_soon: z.string(),
      contents: z.string(),
      metadata: z.object({ published: z.string(), updated: z.string() }),
      schema_name: z.object({
        aaib_report: z.object({ one: z.string(), other: z.string() }),
        announcement: z.object({ one: z.string(), other: z.string() }),
        asylum_support_decision: z.object({
          one: z.string(),
          other: z.string(),
        }),
        authored_article: z.object({ one: z.string(), other: z.string() }),
        business_finance_support_scheme: z.object({
          one: z.string(),
          other: z.string(),
        }),
        case_study: z.object({ one: z.string(), other: z.string() }),
        closed_consultation: z.object({ one: z.string(), other: z.string() }),
        cma_case: z.object({ one: z.string(), other: z.string() }),
        coming_soon: z.object({ one: z.string(), other: z.string() }),
        consultation: z.object({ one: z.string(), other: z.string() }),
        consultation_outcome: z.object({ one: z.string(), other: z.string() }),
        corporate_information_page: z.object({
          one: z.string(),
          other: z.string(),
        }),
        corporate_report: z.object({ one: z.string(), other: z.string() }),
        correspondence: z.object({ one: z.string(), other: z.string() }),
        countryside_stewardship_grant: z.object({
          one: z.string(),
          other: z.string(),
        }),
        decision: z.object({ one: z.string(), other: z.string() }),
        detailed_guide: z.object({ one: z.string(), other: z.string() }),
        dfid_research_output: z.object({ one: z.string(), other: z.string() }),
        document_collection: z.object({ one: z.string(), other: z.string() }),
        draft_text: z.object({ one: z.string(), other: z.string() }),
        drug_safety_update: z.object({ one: z.string(), other: z.string() }),
        employment_appeal_tribunal_decision: z.object({
          one: z.string(),
          other: z.string(),
        }),
        employment_tribunal_decision: z.object({
          one: z.string(),
          other: z.string(),
        }),
        esi_fund: z.object({ one: z.string(), other: z.string() }),
        fatality_notice: z.object({ one: z.string(), other: z.string() }),
        foi_release: z.object({ one: z.string(), other: z.string() }),
        form: z.object({ one: z.string(), other: z.string() }),
        government_response: z.object({ one: z.string(), other: z.string() }),
        guidance: z.object({ one: z.string(), other: z.string() }),
        impact_assessment: z.object({ one: z.string(), other: z.string() }),
        imported: z.object({ one: z.string(), other: z.string() }),
        independent_report: z.object({ one: z.string(), other: z.string() }),
        international_development_fund: z.object({
          one: z.string(),
          other: z.string(),
        }),
        international_treaty: z.object({ one: z.string(), other: z.string() }),
        maib_report: z.object({ one: z.string(), other: z.string() }),
        map: z.object({ one: z.string(), other: z.string() }),
        medical_safety_alert: z.object({ one: z.string(), other: z.string() }),
        national: z.object({ one: z.string(), other: z.string() }),
        national_statistics: z.object({ one: z.string(), other: z.string() }),
        national_statistics_announcement: z.object({
          one: z.string(),
          other: z.string(),
        }),
        news_article: z.object({ one: z.string(), other: z.string() }),
        news_story: z.object({ one: z.string(), other: z.string() }),
        notice: z.object({ one: z.string(), other: z.string() }),
        official: z.object({ one: z.string(), other: z.string() }),
        official_statistics: z.object({ one: z.string(), other: z.string() }),
        official_statistics_announcement: z.object({
          one: z.string(),
          other: z.string(),
        }),
        open_consultation: z.object({ one: z.string(), other: z.string() }),
        oral_statement: z.object({ one: z.string(), other: z.string() }),
        policy: z.object({ one: z.string(), other: z.string() }),
        policy_paper: z.object({ one: z.string(), other: z.string() }),
        press_release: z.object({ one: z.string(), other: z.string() }),
        "product-safety-alert-report-recall": z.object({
          one: z.string(),
          other: z.string(),
        }),
        promotional: z.object({ one: z.string(), other: z.string() }),
        publication: z.object({ one: z.string(), other: z.string() }),
        raib_report: z.object({ one: z.string(), other: z.string() }),
        regulation: z.object({ one: z.string(), other: z.string() }),
        research: z.object({ one: z.string(), other: z.string() }),
        residential_property_tribunal_decision: z.object({
          one: z.string(),
          other: z.string(),
        }),
        service_sign_in: z.object({ one: z.string(), other: z.string() }),
        service_standard_report: z.object({
          one: z.string(),
          other: z.string(),
        }),
        speaking_notes: z.object({ one: z.string(), other: z.string() }),
        speech: z.object({ one: z.string(), other: z.string() }),
        standard: z.object({ one: z.string(), other: z.string() }),
        statement_to_parliament: z.object({
          one: z.string(),
          other: z.string(),
        }),
        statistical_data_set: z.object({ one: z.string(), other: z.string() }),
        statistics_announcement: z.object({
          one: z.string(),
          other: z.string(),
        }),
        statutory_guidance: z.object({ one: z.string(), other: z.string() }),
        take_part: z.object({ one: z.string(), other: z.string() }),
        tax_tribunal_decision: z.object({ one: z.string(), other: z.string() }),
        transcript: z.object({ one: z.string(), other: z.string() }),
        transparency: z.object({ one: z.string(), other: z.string() }),
        utaac_decision: z.object({ one: z.string(), other: z.string() }),
        world_news_story: z.object({ one: z.string(), other: z.string() }),
        written_statement: z.object({ one: z.string(), other: z.string() }),
      }),
    }),
    corporate_information_page: z.object({
      about_our_services_html: z.string(),
      corporate_information: z.string(),
      personal_information_charter_html: z.string(),
      publication_scheme_html: z.string(),
      social_media_use_html: z.string(),
      welsh_language_scheme_html: z.string(),
    }),
    email: z.object({
      already_subscribed_title: z.string(),
      description: z.string(),
      subscribe_title: z.string(),
      unsubscribe_title: z.string(),
    }),
    fatality_notice: z.object({
      alt_text: z.string(),
      field_of_operation: z.string(),
      operations_in: z.string(),
    }),
    get_involved: z.object({
      civil_service: z.string(),
      civil_service_quarterly: z.string(),
      closed: z.string(),
      closed_consultations: z.string(),
      closes: z.string(),
      closing_today: z.string(),
      closing_tomorrow: z.string(),
      days_left: z.string(),
      engage_with_gov: z.string(),
      fcdo_bloggers: z.string(),
      follow: z.string(),
      follow_links: z.string(),
      follow_paragraph: z.string(),
      gds_blog: z.string(),
      gov_past: z.string(),
      intro_paragraph: z.object({
        body_html: z.string(),
        engage_with_government: z.string(),
        take_part: z.string(),
      }),
      join_ics: z.string(),
      make_donation: z.string(),
      more_ways: z.string(),
      neighbourhood_watch: z.string(),
      open_consultations: z.string(),
      page_heading: z.string(),
      page_title: z.string(),
      petition_paragraph: z.object({
        body_html: z.string(),
        create_a_petition: z.string(),
      }),
      read_respond: z.string(),
      recent_outcomes: z.string(),
      recently_opened: z.string(),
      respond_to_consultations: z.string(),
      school_overseas: z.string(),
      search_all: z.string(),
      see_all_dept: z.string(),
      start_a_petition: z.string(),
      take_part: z.string(),
      take_part_suggestions: z.string(),
      your_views: z.string(),
    }),
    gone: z.object({
      page_title: z.string(),
      published_in_error: z.string(),
      title: z.string(),
    }),
    guide: z.object({
      pages_in_guide: z.string(),
      skip_to_contents: z.string(),
    }),
    html_publication: z.object({
      print_meta_data: z.object({
        available_at: z.string(),
        copyright: z.string(),
        isbn: z.string(),
        licence_html: z.string(),
        third_party: z.string(),
      }),
    }),
    i18n: z.object({ direction: z.string() }),
    language_names: z.object({
      ar: z.string(),
      az: z.string(),
      be: z.string(),
      bg: z.string(),
      bn: z.string(),
      cs: z.string(),
      cy: z.string(),
      da: z.string(),
      de: z.string(),
      dr: z.string(),
      el: z.string(),
      en: z.string(),
      es: z.string(),
      "es-419": z.string(),
      et: z.string(),
      fa: z.string(),
      fi: z.string(),
      fr: z.string(),
      gd: z.string(),
      gu: z.string(),
      he: z.string(),
      hi: z.string(),
      hr: z.string(),
      hu: z.string(),
      hy: z.string(),
      id: z.string(),
      is: z.string(),
      it: z.string(),
      ja: z.string(),
      ka: z.string(),
      kk: z.string(),
      ko: z.string(),
      lt: z.string(),
      lv: z.string(),
      ms: z.string(),
      mt: z.string(),
      ne: z.string(),
      nl: z.string(),
      no: z.string(),
      pa: z.string(),
      "pa-pk": z.string(),
      pl: z.string(),
      ps: z.string(),
      pt: z.string(),
      ro: z.string(),
      ru: z.string(),
      si: z.string(),
      sk: z.string(),
      sl: z.string(),
      so: z.string(),
      sq: z.string(),
      sr: z.string(),
      sv: z.string(),
      sw: z.string(),
      ta: z.string(),
      th: z.string(),
      tk: z.string(),
      tr: z.string(),
      uk: z.string(),
      ur: z.string(),
      uz: z.string(),
      vi: z.string(),
      yi: z.string(),
      zh: z.string(),
      "zh-hk": z.string(),
      "zh-tw": z.string(),
    }),
    manuals: z.object({
      breadcrumb_contents: z.string(),
      contents_list_breadcrumb_contents: z.string(),
      hmrc_manual_type: z.string(),
      hmrc_title: z.string(),
      next_page: z.string(),
      pages_in_manual_section: z.string(),
      previous_page: z.string(),
      search_this_manual: z.string(),
      see_all_updates: z.string(),
      title: z.string(),
      updated: z.string(),
      updates_amendments: z.string(),
      updates_description: z.string(),
      updates_page_title: z.string(),
      updates_title: z.string(),
    }),
    multi_page: z.object({
      next_page: z.string(),
      previous_page: z.string(),
      print_entire_guide: z.string(),
      printable_version: z.string(),
    }),
    publication: z.object({
      details: z.string(),
      documents: z.object({ one: z.string(), other: z.string() }),
    }),
    service_sign_in: z.object({
      continue: z.string(),
      error: z.object({ option: z.string(), title: z.string() }),
    }),
    shared: z.object({
      historically_political: z.string(),
      webchat: z.object({
        available: z.string(),
        busy: z.string(),
        closed: z.string(),
        speak_to_adviser: z.string(),
        technical_problem: z.string(),
      }),
    }),
    specialist_document: z.object({
      pdo_alt_text: z.string(),
      pgi_alt_text: z.string(),
      tsg_alt_text: z.string(),
    }),
    speech: z.object({
      delivered_on: z.string(),
      location: z.string(),
      written_on: z.string(),
    }),
    statistics_announcement: z.object({
      cancellation_date: z.string(),
      cancelled: z.string(),
      changed_date: z.string(),
      forthcoming: z.string(),
      previous_date: z.string(),
      proposed_date: z.string(),
      reason_for_change: z.string(),
      release_date: z.string(),
    }),
    travel_advice: z.object({
      alert_status: z.object({
        avoid_all_but_essential_travel_to_parts_html: z.string(),
        avoid_all_but_essential_travel_to_whole_country_html: z.string(),
        avoid_all_travel_to_parts_html: z.string(),
        avoid_all_travel_to_whole_country_html: z.string(),
      }),
      context: z.string(),
      pages: z.string(),
      still_current_at: z.string(),
      summary: z.string(),
      updated: z.string(),
    }),
    time: z.object({ formats: z.object({ short_ordinal: z.string() }) }),
    unpublishing: z.object({
      page_title: z.string(),
      summary: z.string(),
      title: z.string(),
    }),
    working_group: z.object({
      contact_details: z.string(),
      policies: z.string(),
    }),
    worldwide_organisation: z.object({
      corporate_information: z.object({
        about_our_services_html: z.string(),
        personal_information_charter_html: z.string(),
        publication_scheme_html: z.string(),
        social_media_use_html: z.string(),
        welsh_language_scheme_html: z.string(),
      }),
      find_out_more: z.string(),
      headings: z.object({
        contact_us: z.string(),
        corporate_information: z.string(),
        follow_us: z.string(),
        our_people: z.string(),
      }),
      location: z.string(),
      part_of: z.string(),
    }),
  }),
});


export default async function loadTranslations() {
  const content = await readFile('submodules/government-frontend/translations.ts')
  const yaml = parse(content.toString())
  return translations.parse(yaml)
}
